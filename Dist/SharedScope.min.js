!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var t;t="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,t.SharedScope=e()}}(function(){return function e(t,n,r){function o(s,f){if(!n[s]){if(!t[s]){var u="function"==typeof require&&require;if(!f&&u)return u(s,!0);if(i)return i(s,!0);var p=new Error("Cannot find module '"+s+"'");throw p.code="MODULE_NOT_FOUND",p}var c=n[s]={exports:{}};t[s][0].call(c.exports,function(e){var n=t[s][1][e];return o(n?n:e)},c,c.exports,e,t,n,r)}return n[s].exports}for(var i="function"==typeof require&&require,s=0;s<r.length;s++)o(r[s]);return o}({1:[function(e,t,n){"use strict";!function(e){var t="@PackageFactory.Libraries:SharedScope",n="1d8868ac-2911-4521-90c0-fac61e4cef19";if("undefined"!=typeof window[t]){if("function"==typeof window[t].serialVersionUUID&&n===window[t].serialVersionUUID())return void(e.exports=window[t]);throw new Error(t+" is already present in window, but incompatible")}var r=function(){this.__repository={},this.__listeners={}};r.prototype.set=function(e,t){this.__repository[e]=t,"undefined"!=typeof this.__listeners[e]&&(this.__listeners[e].forEach(function(e){return e(t)}),delete this.__listeners[e])},r.prototype.expose=function(e,t){var n=this;Object.keys(t).forEach(function(r){return n.set(e+r,t[r])})},r.prototype.__listen=function(e,t){this.__listeners[e]||(this.__listeners[e]=[]),this.__listeners[e].push(t)},r.prototype.expect=function(e){var t=void 0===arguments[1]?1e3:arguments[1];return"string"==typeof e?this.__expectOne(e,t):this.__expectAll(e,t)},r.prototype.__expectOne=function(e){var t=this,n=void 0===arguments[1]?1e3:arguments[1];return new Promise(function(r,o){return"undefined"!=typeof t.__repository[e]?void r(t.__repository[e]):(t.__listen(e,function(e){r(e)}),void setTimeout(function(){o(new Error("Expectation timed out after "+n+" milliseconds."))},n))})},r.prototype.__expectAll=function(e){var t=this,n=void 0===arguments[1]?1e3:arguments[1];return Promise.all(e.map(function(e){return t.__expectOne(e,n)}))},r.prototype.serialVersionUUID=function(){return n},window[t]=new r,e.exports=window[t]}(t)},{}]},{},[1])(1)});